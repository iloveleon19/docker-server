version: "3.7"

services:
    php:
        build: "php/"
        container_name: "php_7.2-fpm"
        user: "www-data"
        restart: always
        working_dir: /var/www/html
        volumes:
            - ./php/conf.d:/usr/local/etc/php/conf.d
            - ~/workspace:/var/www/html
        depends_on:
            - mysql
            - redis
        ports:
            - "9000:9000"
        networks:
            - app-network
        tty: true

    nginx:
        build: "nginx/"
        container_name: "nginx_1.6.0"
        restart: always
        volumes:
            - ~/workspace:/var/www/html
            - ./nginx/conf.d/:/etc/nginx/conf.d
        depends_on:
            - php
        ports:
            - "80:80"
            - "443:443"
        networks:
            - app-network
        tty: true

    node:
        build: "node"
        container_name: "node_10.6.0"
        restart: always
        user: "node"
        working_dir: /home/node/app
        environment:
            - NODE_ENV=development
        volumes:
            - ~/workspace:/home/node/app
        ports:
            - "4200:4200"
            - "3000:3000"
            # - "8080:8080"
        networks:
            - app-network
        tty: true

    mysql:
        build: "mysql/"
        container_name: "mysql_5.7"
        command: --default-authentication-plugin=mysql_native_password
        command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
        restart: always
        environment:
            MYSQL_DATABASE: "homestead"
            MYSQL_ROOT_PASSWORD: "secret"
            MYSQL_USER: "homestead"
            MYSQL_PASSWORD: "secret"
            SERVICE_NAME: mysql
            SERVICE_TAGS: dev
        volumes:
            - mysql-data:/var/lib/mysql
        ports:
            - "3306:3306"
            - "33060:33060"
        networks:
            - app-network
        tty: true

    golang:
        build: "golang/"
        container_name: "golang_1.12.7"
        restart: always
        working_dir: "/go/src/app"
        user: "www-data"
        volumes:
            - ~/workspace:/go/src/app
        ports: 
            - "8080:8080"
        networks:
            - app-network
        tty: true
        depends_on:
            - redis
            - mysql
        environment:
            REDIS_URL: redis:6379

    redis:
        build: "redis/"
        container_name: "redis_5.0.5"
        restart: always
        volumes:
            - redis-data:/data
        ports:
            - "6379:6379"
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    mysql-data:
    redis-data:
